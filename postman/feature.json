{
	"info": {
		"_postman_id": "730fa48a-e900-4dfc-9fb8-379f49e6504d",
		"name": "Comments API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11437094"
	},
	"item": [
		{
			"name": "Prepare",
			"item": [
				{
					"name": "Добавление нового пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"as\",\n  \"email\": \"sMsesdrssl98sss@gmail.com\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление новой категории",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ass\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"categories"
							]
						},
						"description": "Обратите внимание: имя категории должно быть уникальным"
					},
					"response": []
				},
				{
					"name": "Добавление нового события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"annotation\": \"Сплав на байдарках похож на полет.\",\n  \"category\": 1,\n  \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\n  \"eventDate\": \"2027-12-31 15:10:05\",\n  \"location\": {\n    \"lat\": 55.754167,\n    \"lon\": 37.62\n  },\n  \"paid\": true,\n  \"participantLimit\": 0,\n  \"requestModeration\": false,\n  \"title\": \"Сплав на байдарках\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/1/events",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1",
								"events"
							]
						},
						"description": "Обратите внимание: дата и время на которые намечено событие не может быть раньше, чем через два часа от текущего момента"
					},
					"response": []
				},
				{
					"name": "Редактирование данных события и его статуса (отклонение/публикация).",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 Ok\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"stateAction\": \"PUBLISH_EVENT\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/events/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"events",
								"1"
							]
						},
						"description": "Редактирование данных любого события администратором. Валидация данных не требуется.\nОбратите внимание:\n - дата начала изменяемого события должна быть не ранее чем за час от даты публикации. (Ожидается код ошибки 409)\n- событие можно публиковать, только если оно в состоянии ожидания публикации (Ожидается код ошибки 409)\n- событие можно отклонить, только если оно еще не опубликовано (Ожидается код ошибки 409)"
					},
					"response": []
				},
				{
					"name": "Добавление комментария",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"Тестовый комментарий\",\n  \"eventId\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/1/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление комментария Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"Тестовый комментарий 2\",\n  \"eventId\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/1/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Public Comments",
			"item": [
				{
					"name": "Get all event comments",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 Ok\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comments?eventId=1&from=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comments"
							],
							"query": [
								{
									"key": "eventId",
									"value": "1"
								},
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Private Comments",
			"item": [
				{
					"name": "Add comment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"Тестовый комментарий\",\n  \"eventId\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/1/comments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 Ok\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"Обновленный комментарий\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/1/comments/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 No content\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1/comments/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1",
								"comments",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin Comments",
			"item": [
				{
					"name": "Get comments by author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 Ok\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/comments/users/1?from=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"comments",
								"users",
								"1"
							],
							"query": [
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update comment state",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 Ok\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"state\": \"CANCELED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/comments/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 No content\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/comments/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"comments",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"await pm.sendRequest({\r",
					"    url: pm.variables.get('base_url') + '/admin/users',\r",
					"    method: 'POST',\r",
					"    header: { 'Content-Type': 'application/json' },\r",
					"    body: {\r",
					"        mode: 'raw',\r",
					"        raw: JSON.stringify({\r",
					"            name: 'Тестовый юзер',\r",
					"            email: `user${Math.floor(Math.random() * 100000)}@test.ru`\r",
					"        })\r",
					"    }\r",
					"});\r",
					"\r",
					"await pm.sendRequest({\r",
					"    url: pm.variables.get('base_url') + '/admin/categories',\r",
					"    method: 'POST',\r",
					"    header: { 'Content-Type': 'application/json' },\r",
					"    body: {\r",
					"        mode: 'raw',\r",
					"        raw: JSON.stringify({\r",
					"            name: `Категория ${Math.floor(Math.random() * 100000)}`\r",
					"        })\r",
					"    }\r",
					"});\r",
					"\r",
					"function formatDate(date) {\r",
					"    const pad = num => num.toString().padStart(2, '0');\r",
					"    return `${date.getFullYear()}-${pad(date.getMonth()+1)}-${pad(date.getDate())} ${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;\r",
					"}\r",
					"\r",
					"const tomorrow = new Date();\r",
					"tomorrow.setDate(tomorrow.getDate() + 1);\r",
					"\r",
					"await pm.sendRequest({\r",
					"    url: pm.variables.get('base_url') + '/users/1/events',\r",
					"    method: 'POST',\r",
					"    header: { 'Content-Type': 'application/json' },\r",
					"    body: {\r",
					"        mode: 'raw',\r",
					"        raw: JSON.stringify({\r",
					"            title: 'Сплав на байдарках',\r",
					"            annotation: 'Сплав на байдарках похож на полет',\r",
					"            description: 'Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления',\r",
					"            category: 1,\r",
					"            eventDate: formatDate(tomorrow),\r",
					"            location: {\r",
					"                lat: 55.754167,\r",
					"                lon: 37.62\r",
					"            },\r",
					"            paid: false,\r",
					"            participantLimit: 0,\r",
					"            requestModeration: false\r",
					"        })\r",
					"    }\r",
					"});\r",
					"\r",
					"await pm.sendRequest({\r",
					"    url: pm.variables.get('base_url') + '/admin/events/1',\r",
					"    method: 'PATCH',\r",
					"    header: { 'Content-Type': 'application/json' },\r",
					"    body: {\r",
					"        mode: 'raw',\r",
					"        raw: JSON.stringify({\r",
					"            stateAction: 'PUBLISH_EVENT'\r",
					"        })\r",
					"    }\r",
					"});\r",
					"\r",
					"await pm.sendRequest({\r",
					"    url: `${pm.collectionVariables.get('base_url')}/users/1/comments`,\r",
					"    method: 'POST',\r",
					"    header: { 'Content-Type': 'application/json' },\r",
					"    body: {\r",
					"        mode: 'raw',\r",
					"        raw: JSON.stringify({\r",
					"            text: \"Комментарий из pre-request\",\r",
					"            eventId: 1\r",
					"        })\r",
					"    }\r",
					"});\r",
					"\r",
					"await pm.sendRequest({\r",
					"    url: `${pm.collectionVariables.get('base_url')}/users/1/comments`,\r",
					"    method: 'POST',\r",
					"    header: { 'Content-Type': 'application/json' },\r",
					"    body: {\r",
					"        mode: 'raw',\r",
					"        raw: JSON.stringify({\r",
					"            text: \"Комментарий из pre-request 2\",\r",
					"            eventId: 1\r",
					"        })\r",
					"    }\r",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080"
		}
	]
}